<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.10.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>MicroService_DB</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR10</spring-cloud.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.springframework.cloud</groupId>-->
<!--			<artifactId>spring-cloud-starter-task</artifactId>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/appassembler-jsw/jsw/${project.name}/conf</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/../common-test-resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<executions>
					<execution>
						<id>generate-daemons-windows</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
						</goals>
						<configuration>
							<target>${project.build.directory}/appassembler-jsw</target>
							<repositoryLayout>flat</repositoryLayout>
							<configurationDirectory>conf</configurationDirectory>
							<copyConfigurationDirectory>true</copyConfigurationDirectory>
							<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
							<daemons>
								<daemon>
									<id>${project.name}</id>
									<mainClass>com.example.demo.MicroServiceDbApplication</mainClass>
									<commandLineArguments/>
									<platforms>
										<platform>jsw</platform>
									</platforms>
									<generatorConfigurations>
										<generatorConfiguration>
											<generator>jsw</generator>
											<includes>
												<include>windows-x86-64</include>
											</includes>
											<configuration>
												<property>
													<name>configuration.directory.in.classpath.first</name>
													<value>conf</value>
												</property>
												<property>
													<name>wrapper.logfile</name>
													<value>logs/wrapper.log</value>
												</property>
												<property>
													<name>wrapper.logfile.maxsize</name>
													<value>100m</value>
												</property>
												<property>
													<name>wrapper.logfile.maxfiles</name>
													<value>50</value>
												</property>
											</configuration>
										</generatorConfiguration>
									</generatorConfigurations>
									<jvmSettings>
										<initialMemorySize>256M</initialMemorySize>
										<maxMemorySize>2048M</maxMemorySize>
										<extraArguments>
											<extraArgument>-Xdebug</extraArgument>
											<extraArgument>-server</extraArgument>
											<extraArgument>-XX:+HeapDumpOnOutOfMemoryError</extraArgument>
										</extraArguments>
									</jvmSettings>
								</daemon>
							</daemons>
						</configuration>
					</execution>

					<execution>
						<id>assemble-standalone-unix</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
						<configuration>
							<extraJvmArguments>-Xms256m -Xmx2048m</extraJvmArguments>
							<programs>
								<program>
									<platforms>
										<platform>unix</platform>
									</platforms>
									<name>${project.name}</name>
									<mainClass>com.example.demo.MicroServiceDbApplication</mainClass>
								</program>
							</programs>
							<repositoryLayout>flat</repositoryLayout>
							<repositoryName>lib</repositoryName>
							<configurationDirectory>conf</configurationDirectory>
						<binFileExtensions>
							<unix>.sh</unix>
						</binFileExtensions>
							<copyConfigurationDirectory>true</copyConfigurationDirectory>
							<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
